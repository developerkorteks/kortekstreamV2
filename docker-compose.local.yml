services:
  web:
    build: .
    container_name: kortekstream_web
    restart: unless-stopped
    volumes:
      - ./:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    env_file:
      - .env.local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kortekstream_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9326/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14-alpine
    container_name: kortekstream_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=kortekstream
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=localpassword
    networks:
      - kortekstream_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kortekstream_redis
    restart: unless-stopped
    command: redis-server --port 6380 --requirepass localredispassword
    volumes:
      - redis_data:/data
    networks:
      - kortekstream_network
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6380", "-a", "localredispassword", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25-alpine
    container_name: kortekstream_nginx
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/var/log/nginx
    ports:
      - "9000:9000"  # Using non-standard port for HTTP
    depends_on:
      web:
        condition: service_started
    networks:
      - kortekstream_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  kortekstream_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs_volume: