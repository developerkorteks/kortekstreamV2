

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kortekstream}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --port 7363
    volumes:
      - redis_data:/data
    ports:
      - "7363:7363"
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7363", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    ports:
      - "9111:9111"
    volumes:
      - .:/app
      - media_volume:/app/media
      - logs_volume:/app/logs
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password123}@db:5432/${POSTGRES_DB:-kortekstream}
      - REDIS_URL=redis://redis:7363/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0,128.199.109.211,kortekstream.online}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:9111,http://127.0.0.1:9111,http://128.199.109.211,https://kortekstream.online}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9111/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  media_volume:
  logs_volume: